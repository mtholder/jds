<!DOCTYPE html>
<html lang="${request.locale_name}">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="pyramid web application">
    <meta name="author" content="Pylons Project">
    <link rel="shortcut icon" href="${request.static_url('jds:static/pyramid-16x16.png')}">
    <title>JS dot rendering</title>
    <!-- Bootstrap core CSS -->
    <!-- Custom styles for this scaffold -->
    <!--link href="${request.static_url('jds:static/theme.css')}" rel="stylesheet" -->
    <!-- HTML5 shim and Respond.js IE8 support of HTML5 elements and media queries -->
    <!--[if lt IE 9]>
      <script src="//oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js"></script>
      <script src="//oss.maxcdn.com/libs/respond.js/1.3.0/respond.min.js"></script>
    <![endif]-->
  </head>

  <body>
<style type='text/css'>
svg {
    width: 100%;
    height: 100%;
    overflow: hidden;
}

.node rect {
    stroke: #333;
    stroke-width: 1.5px;
    fill: #fff;
}

.edgeLabel rect {
    fill: #fff;
}

.edgePath {
    stroke: #333;
    stroke-width: 1.5px;
    fill: none;
}

</style>

<style>

  .blank text {
    font-weight: 300;
    font-size: 14px;
  }

  .blank .node rect {
    stroke-width: 1.5px;
    stroke: #bbb;
    fill: #666;
  }

  .blank .node.box rect {
    stroke-width: 1.5px;
    stroke: #bbb;
    fill: #666;
  }

  .blank .node.oval rect {
    stroke-width: 1.5px;
    stroke: #bbb;
    fill: #F66;
  }

  .blank .status {
    height: 100%;
    width: 15px;
    display: block;
    float: left;
    border-top-left-radius: 5px;
    border-bottom-left-radius: 5px;
    margin-right: 4px;
  }


  .warn {
    -webkit-animation-name: flash;
    animation-name: flash;
  }

  .blank .node g div {
    width: 200px;
    height: 40px;
    color: #f00;
  }

  .blank .edgeLabel text {
    width: 50px;
    fill: #fff;
  }

  .blank .edgePath path {
    stroke: #999;
    stroke-width: 1.5px;
    fill: #999;
  }
</style>
    <div class="blank">
      <svg id="graphContainer">
        <g/>
      </svg>
      <div>${error}</div>
    </div>
    <div class="row">
      <div class="links">
        <ul>
          <li class="current-version">Developed from <a href="http://stackoverflow.com/a/24736418">this example</a>.</li>
          <li class="current-version">Uses <a href="https://github.com/cpettitt/dagre-d3">dagre-d3</a></li>
          <li class="current-version">Uses <a href="https://github.com/cpettitt/graphlib-dot">graphlib-dot</a></li>
          <li class="current-version">Generated by Pyramids v1.5.2</li>
          <li><i class="glyphicon glyphicon-bookmark icon-muted"></i><a href="http://docs.pylonsproject.org/projects/pyramid/en/1.5-branch/">Docs</a></li>
          <li><i class="glyphicon glyphicon-cog icon-muted"></i><a href="https://github.com/Pylons/pyramid">Github Project</a></li>
          <li><i class="glyphicon glyphicon-globe icon-muted"></i><a href="irc://irc.freenode.net#pyramid">IRC Channel</a></li>
          <li><i class="glyphicon glyphicon-home icon-muted"></i><a href="http://pylonsproject.org">Pylons Project</a></li>
      </div >


    <!-- Bootstrap core JavaScript
    ================================================== -->
    <!-- Placed at the end of the document so the pages load faster -->
    <script src="//oss.maxcdn.com/libs/jquery/1.10.2/jquery.min.js"></script>
    <script src="//oss.maxcdn.com/libs/twitter-bootstrap/3.0.3/js/bootstrap.min.js"></script>
    <script type='text/javascript' src="http://d3js.org/d3.v3.js"></script>
    <script type='text/javascript' src="static/js/dagre-d3.js"></script>
    <script type='text/javascript' src="http://cpettitt.github.io/project/graphlib-dot/v0.4.10/graphlib-dot.min.js"></script>
<script type='text/javascript'>
window.onload=function(){
  // Parse the DOT syntax into a graphlib object.
  var dotg = graphlibDot.parse('${structure:dot}');
  // taken from etl-status and user-defined demos in dagreD3
  var svg = d3.select("svg");
  var inner = svg.select("g");
  var zoom = d3.behavior.zoom().on("zoom", function() {
        inner.attr("transform", "translate(" + d3.event.translate + ")" +
                                    "scale(" + d3.event.scale + ")");
      });
  svg.call(zoom);
  var render = new dagreD3.render();
  // Add our custom shape (a record)
  render.shapes().record = function(parent, bbox, node) {
    var w = bbox.width,
        h = bbox.height,
        points = [
          { x:   0, y:        0 },
          { x:   w, y:        0 },
          { x:   w, y:       -h },
          { x: w/2, y: -h * 3/2 },
          { x:   0, y:       -h }
        ];
        shapeSvg = parent.insert("polygon", ":first-child")
          .attr("points", points.map(function(d) { return d.x + "," + d.y; }).join(" "))
          .attr("transform", "translate(" + (-w/2) + "," + (h * 3/4) + ")");

    node.intersect = function(point) {
      return dagreD3.intersect.polygon(node, points, point);
    };

    return shapeSvg;
  };
  var g = new dagreD3.graphlib.Graph();
  g.setGraph({
    nodesep: 70,
    ranksep: 50,
    marginx: 20,
    marginy: 20
  });

  function draw() {
    for (var id in dotg._nodes) {
      var dagnode = dotg._nodes[id];
      var attr = dagnode.value;
      var className = attr.shape;
      var html = "<div>";
      //html += "<span class=status></span>";
      //html += "<span class=name>" + attr.label + "</span>";
      html += "</div>";
      var fillcolor, shape;
      if (attr.fillcolor) {
        fillcolor = attr.fillcolor;
      } else {
        fillcolor = "#F00";
      }
      shape = "rect";
      if (attr.shape == "oval") {
        shape = "ellipse";
      } else if (attr.shape == "record") {
        shape = "record";
      }
      g.setNode(id, {
        labelType: "html",
        label: html,
        rx: 5,
        ry: 5,
        padding: 0,
        class: className,
        shape: shape,
        fill: fillcolor
      });
    }
    for (id in dotg._edges) {
      var dagedge = dotg._edges[id];
      g.setEdge(dagedge.u, dagedge.v, {});
    }

    inner.call(render, g);

    // Zoom and scale to fit
    var zoomScale = zoom.scale();
    var graphWidth = g.graph().width + 80;
    var graphHeight = g.graph().height + 40;
    var width = parseInt(svg.style("width").replace(/px/, ""));
    var height = parseInt(svg.style("height").replace(/px/, ""));
    zoomScale = Math.min(width / graphWidth, height / graphHeight);
    var translate = [(width/2) - ((graphWidth*zoomScale)/2), (height/2) - ((graphHeight*zoomScale)/2)];
    zoom.translate(translate);
    zoom.scale(zoomScale);
    zoom.event(d3.select("svg"));
  }
  draw();

}
</script>
  </body>
</html>
